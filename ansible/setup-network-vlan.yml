---
- hosts: undercloud
  vars:
    network_environment_file: "network-environment.yaml"
    physnet_name: datacentre
    template_base: "{{ ansible_user_dir}}/virt"
    type: vlan
    public_network: public
    public_subnet: public-subnet
    private_network: private
    private_subnet: private-subnet
    private_cidr: 192.0.2.0/24
    dns_server: 8.8.8.8
  tasks:
    - name: Get default gateway interface
      shell: |
        ip r | grep default  | sed -n 's/.* dev \([[:alnum:]]*\) .*/\1/p'
      register: default_interface
    - name: setup iptables rules
      shell: |
        iptables -t nat -A POSTROUTING -o {{ default_interface.stdout }} -j MASQUERADE
        iptables -I FORWARD -j ACCEPT
      become: yes
    - name: check the deployment network configuraiton file
      find:
          paths: "{{ template_base }}"
          patterns: "{{ network_environment_file }}"
          recurse: yes
      register: network_environment_file_path
    - name: read deployment network configuration
      command: cat {{ network_environment_file_path.files[0].path }}
      register: network_template_out
      when: network_environment_file_path.matched > 0
      changed_when: false
    - name: load deployment network configuration as YAML
      set_fact:
          network_template: "{{ network_template_out.stdout | from_yaml }}"
      when: network_environment_file_path.matched > 0
    - debug:
        msg: "{{ network_template.parameter_defaults.ExternalNetCidr }}"
    - name: setup network
      shell: |
        source ~/overcloudrc
        openstack network create --share --external --provider-network-type "{{ type }}" \
           --provider-segment "{{ network_template.parameter_defaults.ExternalNetworkVlanID }}" \
           --provider-physical-network "{{ physnet_name }}" "{{ public_network }}"
        openstack subnet create --network public --subnet-range "{{ network_template.parameter_defaults.ExternalNetCidr }}" \
           --no-dhcp "{{ public_subnet }}"
        openstack network create --share --provider-network-type geneve "{{ private_network }}"
        openstack subnet create "{{ private_subnet }}" --subnet-range "{{ private_cidr }}" --network \
            "{{ private_network }}"
        openstack router create default-router
        openstack router add subnet default-router "{{ private_subnet }}"
        openstack router set --external-gateway "{{ public_network }}" default-router



